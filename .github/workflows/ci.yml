name: CI

on:
  push:
    branches:
      - master
  pull_request:

env:
  PSALM_PHP_VERSION: "8.4"
  COVERAGE_PHP_VERSION: "8.4"

jobs:
  psalm:
    name: Psalm
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PSALM_PHP_VERSION }}

      - name: Install composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run Psalm
        run: vendor/bin/psalm --show-info=false --find-unused-psalm-suppress --no-progress

  coding-standard:
    name: Coding Standard
    uses: brick/coding-standard/.github/workflows/coding-standard.yml@v2
    with:
      working-directory: "tools/ecs"

  phpunit-mysql:
    name: PHPUnit MySQL
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        deps:
          - "highest"
        include:
          - php-version: "8.1"
            deps: "lowest"

    services:
      mysql:
        image: "mysql:8.0"
        ports:
          - "3306:3306"
        options: >-
          --health-cmd "mysqladmin ping --silent"
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo_mysql
          coverage: xdebug

      - name: Install composer dependencies
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.deps }}

      - name: Run PHPUnit
        run: vendor/bin/phpunit
        env:
          DB_DRIVER: pdo_mysql
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ""
        if: ${{ matrix.php-version != env.COVERAGE_PHP_VERSION }}

      - name: Run PHPUnit with coverage
        run: |
          mkdir -p mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml
        env:
          DB_DRIVER: pdo_mysql
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ""
        if: ${{ matrix.php-version == env.COVERAGE_PHP_VERSION }}

      - name: Upload coverage report to Coveralls
        run: vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.php-version == env.COVERAGE_PHP_VERSION }}

  phpunit-mariadb:
    name: PHPUnit MariaDB
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        php-version:
          - "8.1"

    services:
      mariadb:
        image: "mariadb:10.11"
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: >-
          --health-cmd "mysqladmin ping --silent"
        ports:
          - "3306:3306"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo_mysql
          coverage: xdebug

      - name: Install composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run PHPUnit with coverage
        run: |
          mkdir -p mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml
        env:
          DB_DRIVER: pdo_mysql
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: ""

      - name: Upload coverage report to Coveralls
        run: vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  phpunit-postgres:
    name: PHPUnit PostgreSQL
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        php-version:
          - "8.1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PostgreSQL with PostGIS
        uses: huaxk/postgis-action@v1
        with:
          postgresql version: 'latest'
          postgresql password: 'postgres'
          postgresql user: 'postgres'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo_pgsql
          coverage: xdebug

      - name: Install composer dependencies
        uses: ramsey/composer-install@v3

      - name: Run PHPUnit with coverage
        run: |
          mkdir -p mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml
        env:
          DB_DRIVER: pdo_pgsql
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres

      - name: Upload coverage report to Coveralls
        run: vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
